from django.db import models
from django.contrib.auth.models import AbstractBaseUser, BaseUserManager, PermissionsMixin
import django.db
from django.utils.translation import gettext_lazy as _  
from apps.leasing.models.Consommable import Consommable
from apps.leasing.models.Deploiement import Deploiement

### Exploitation d'une imprimante
class ConsommableExploitation(models.Model):
    id = models.BigAutoField(primary_key=True)
    exploitation = models.ForeignKey('Exploitation', on_delete=models.CASCADE)
    consommable = models.ForeignKey(Consommable, on_delete=models.CASCADE)
    quantite = models.IntegerField(verbose_name=_('Quantit√©'), default=0)

    class Meta:
        unique_together = ('exploitation', 'consommable')

class Exploitation(models.Model):
    class Typeintervention(models.TextChoices):
          remplacement ="Remplacement consommable","Remplacement consommable"
          releve = "Releve fin du mois","Releve fin du mois"
          papier = "Fourniture Carton Papier","Fourniture Carton Papier"
    idexploitation = models.BigAutoField(primary_key=True)
    date_exploitation = models.DateField(auto_now=True)
    intervention = models.CharField(max_length=50, verbose_name=_('Intervention'), choices=Typeintervention.choices, default=Typeintervention.papier)
    consommables = models.ManyToManyField(Consommable, through=ConsommableExploitation)
    deploiement = models.ForeignKey(Deploiement, on_delete=models.SET_NULL, null=True)
    pourcentage_toner = models.CharField(max_length=5, verbose_name=_('Toner (%)'), blank=True, null=True)
    ancien_index = models.IntegerField(blank=True, null=True)
    nouvel_index = models.IntegerField(blank=True, null=True)
    observation = models.TextField(verbose_name =_('Observation'),max_length=200,null=False, blank=False)